# Custom parameter for the builder
# You can set / override any parameter in this file.
# Alternatively you can use it as a template and pass the actual file as
# parameter to the builder.
# You need at least provide the mandatory parameters

#
# Mandatory parameters
#

# Workspace for the builder and location of the artifacts
WORKSPACE=
# ISO_URL -- location of the ISO file
# Can be local (file://) or remote (https://) but it must be an URL
ISO_URL=
# ISO_CHECKSUM -- checksum for the ISO file
ISO_CHECKSUM=

#
# Optional parameters
#

# Distribution (Default is ol7-slim)
# DISTR=
# Cloud provider (Default is none)
CLOUD="none"

# Build BUILD_NUMBER (Default is 0)
# BUILD_NUMBER=

# Root access to the VM at least one method must be provided:
# Root account password (Default is empty)
# SSH_PASSWORD=
# Path to an ssh private/public key pair (Default none). The public key will
# be installed for the root user
# SSH_KEY_FILE=
# Lock root account after provisioning? (Default: yes)
# LOCK_ROOT=

#
# Override examples
#

# Setup swap? (Yes/No, default is distribution / cloud specific)
# SETUP_SWAP=

# SELinux state (enforcing, permissive, disabled)
# SELINUX=

# Root filesystem: btrfs, xfs or lvm (Default: xfs)
# ROOT_FS=

# Which kernel? (uek, rhck, modrhck, default is distribution / cloud specific)
# KERNEL=

# UEK release (distribution / cloud specific)
# UEK_RELEASE=

# Keep linux-firmware package? (Yes/No, default Yes)
# Linux firmware is not needed on VM instances, unless hardware like GPU is
# directly passed to the VM.
# Removing this package will drastically reduce the size of the image.
# Note that kernel packages have an install dependency on linux-firmware; if
# removed it will be re-installed when a new kernel is installed.
# LINUX_FIRMWARE=

# Strip locales and only keep en_US? (Yes/No, default No)
# (ol7-slim ditribution only)
# STRIP_LOCALES=

# Exclude documentation (man pages, info files, doc files)? (Yes/No/Minimal,
# default: No)
# When "Yes" is selected, yum/dnf wil be configured to exclude all documentation
# ("tsflags=nodocs" parameter).
# If you plan to re-distribute the image, you might need to keep the
# "/usr/share/doc" directory which contains the packages licence terms.
# The "Minimal" option will remove man pages and info files, but will keep the
# "/usr/share/doc" directory.
# EXCLUDE_DOCS=

# Number of CPUs for the build VM (Default: 4)
# CPU_NUM=
# Memory allocated to the build VM (Default: 8192)
# MEM_SIZE=

# Allocated disk size for the image, default is distribution / cloud specific
# DISK_SIZE_GB=

# If you experience issues when building in a nested virtualization environment,
# you can disable X2APIC in VirtualBox for the build: on/off (default: on)
# X2APIC=

# Capture serial console in serial-console.txt during Kickstart. (Yes, No,
# default: no) -- Useful for debugging Kickstart issues.
# SERIAL_CONSOLE=

# We use the full path for Hashicorp Packer from the Linux package generating tool
# PACKER="/usr/bin/packer"
# PACKER_BUILD_OPTIONS="-on-error=ask"
# Packer builder (virtualbox-iso.x86-64 or qemu.x86-64)
# Vagrant virtualbox images require virtualbox-iso.x86-64 builder
# PACKER_BUILDER="virtualbox-iso.x86-64"
# Location of the QEMU binary
# QEMU_BINARY=""


# If defined, override generated VM_NAME
# VM_NAME=

# If your ISO_URL points to a boot iso, you need to provide:
#   - an URL to an installation tree on a remote server
#   - optionally an associative array of additional yum repositories that may
#     be used as sources for package installation.
# Example for an OL9 install:
# REPO_URL="https://yum.oracle.com/repo/OracleLinux/OL9/baseos/latest/x86_64"
# REPO[AppStream]="https://yum.oracle.com/repo/OracleLinux/OL9/appstream/x86_64"
# REPO[ol9_UEKR7]="https://yum.oracle.com/repo/OracleLinux/OL9/UEKR7/x86_64"

# OVM Image version (Default: 1.0)
# IMAGE_VERSION=

# OCI / OLVM:
# Install cloud-init? (Yes/No, default is Yes for OCI and No for OLVM)
# CLOUD_INIT=
# cloud-init user (Default is "opc" for OCI and "cloud-user" for OLVM)
# CLOUD_USER=
# OLVM: Custom script passed to Cloud-init (user data) -- Example:
# CUSTOM_SCRIPT="#cloud-config
# disable_root: 1"
# CUSTOM_SCRIPT=

# OLVM:
# Generates a template instead of an image? (Yes, No, default: No)
# OLVM_TEMPLATE=

# Vagrant virtualbox
# Memory and CPU to allocate to the box by default at runtime (default: same
# as build VM values)
# VAGRANT_VIRTUALBOX_MEM_SIZE=
# VAGRANT_VIRTUALBOX_CPU_NUM=
# Additional disk to attach to the VM.
# Empty means no disk, otherwhise it is the size in GB of the extra disk
# VAGRANT_VIRTUALBOX_EXTRA_DISK_GB=
# Install different Guest Additions than the ones provided by the build host.
# URL can be a local file (file:// URI)
# VAGRANT_GUEST_ADDITIONS_URL=""
# VAGRANT_GUEST_ADDITIONS_SHA256=""

# Vagrant libvirt
# Location of the vagrant libvirt create_box.sh script.
# Install the vagrant-libvirt plugin on your build machine or download the
# script from:
# https://github.com/vagrant-libvirt/vagrant-libvirt/blob/master/tools/create_box.sh
# VAGRANT_LIBVIRT_BOX_SCRIPT="${HOME}/.vagrant.d/gems/<vagrant version>/gems/vagrant-libvirt-<version>/tools/create_box.sh"
# Memory and CPU to allocate to the box by default at runtime (default: same
# as build VM values)
# VAGRANT_LIBVIRT_MEM_SIZE=
# VAGRANT_LIBVIRT_CPU_NUM=

# Vagrant all providers
# Install developer release packages (Yes/No, default: no)
# VAGRANT_DEVELOPER_REPOS=
