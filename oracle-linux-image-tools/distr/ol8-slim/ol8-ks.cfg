# OL8 kickstart file
# System authorization information
authselect select minimal with-faillock with-silent-lastlog with-pamaccess

# Command line install
cmdline
text

# Run the Setup Agent on first boot
eula --agreed
firstboot --disable

# Only use the "system disk"
ignoredisk --only-use=sda

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# reboot at the end
reboot

# System timezone
timezone UTC --isUtc

# Network information
network  --bootproto=dhcp --device=eth0 --onboot=yes --ipv6=auto --hostname=localhost.localdomain

# URL to an installation tree on a remote server

# Additional yum repositories that may be used as sources for package installation.

# Root password -- will be overridden by the builder
rootpw --lock

# System services
services --disabled="kdump,rhsmcertd" --enabled="firewalld,sshd,rsyslog,chronyd"
selinux --enforcing
firewall --service=ssh

# System bootloader configuration
bootloader --append="console=tty0 no_timer_check net.ifnames=0 biosdevname=0 crashkernel=auto" --location=mbr --timeout=1  --boot-drive=sda

# Partition clearing information
zerombr
clearpart --all --initlabel

# Disk partitioning information
part /boot    --fstype="xfs"  --ondisk=sda --size=1024 --label=/boot
part swap     --fstype="swap" --ondisk=sda --size=4096 --label=swap
part /        --fstype="xfs"  --ondisk=sda --size=4096 --label=root  --grow

# '--nocore' adds @core to the exclusion list, which generates issues when it
# is added in the package list...
%packages
# Removed from the "Mandatory" Core group packages:
-audit
-dnf-plugin-spacewalk
-iprutils
-irqbalance
-parted
-plymouth
-rhn-client-tools
-rhn-setup
-rhnlib
-rhnsd
-rng-tools
-sssd-common
-sssd-kcm
-tuned
# Removed from the "Default" Core group packages:
-NetworkManager-team
-NetworkManager-tui
-biosdevname
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-iwl7260-firmware
-lshw
-lsscsi
-microcode_ctl
-prefixdevname
-sg3_utils
-sg3_utils-libs

# hwdata blacklists several modules, a.o. the fb (frame buffer) ones
hwdata

# Create a generic image
dracut-config-generic
%end

%post --interpreter /bin/bash --log=/root/ks-post.log

echo "Network fixes"
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
NM_CONTROLLED="yes"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

echo "Kernel configuration"
# Remove the big rescue image if present
RESCUE_KERNEL=no
if [[ "${RESCUE_KERNEL,,}" = "no" ]]; then
  dnf remove -y dracut-config-rescue
  rm -f /boot/{initramfs,vmlinuz}-0-rescue-$(cat /etc/machine-id)*
  rm -f /boot/loader/entries/$(cat /etc/machine-id)-0-rescue.conf
fi

# Ensure we don't reboot with the serial console enabled
sed -i \
  -e 's/ console=ttyS0//' \
  -e 's/^GRUB_TERMINAL.*/GRUB_TERMINAL_OUTPUT="console"'/ \
  -e '/^GRUB_SERIAL_COMMAND/d' \
  /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg

EXCLUDE_DOCS="no"
echo "Exclude documentation: ${EXCLUDE_DOCS^^}"
if [[ "${EXCLUDE_DOCS,,}" = "yes" ]]; then 
  echo "tsflags=nodocs" >> /etc/dnf/dnf.conf
fi

# Get latest release file (Needed for UEK)
dnf upgrade -y oraclelinux-release-el8

# Install latest kernel, that way it will be available at first boot and
# allow proper cleanup
KERNEL=uek
UEK_RELEASE=7
echo "Kernel update (${KERNEL^^})"

echo  "Running kernel: $(uname -r)"
echo "Kernel(s) installed:"
rpm -qa | grep '^kernel' | sort

kernel="kernel"
dnf_options=""
if [[ "${KERNEL,,}" = "uek" ]]; then
  dnf_options="--disablerepo ol8_UEKR\* --enablerepo ol8_UEKR${UEK_RELEASE}"
  if [[ ${UEK_RELEASE} == 6 ]]; then
    kernel="kernel-uek"
  else
    kernel="kernel-uek-core"
  fi
fi

# Set default kernel
sed -i -e 's/^DEFAULTKERNEL=.*/DEFAULTKERNEL='"${kernel}"'/' /etc/sysconfig/kernel

if rpm --quiet -q "${kernel}"; then
  echo "Kernel ${kernel} already installed"
  dnf check-update ${dnf_options} ${kernel}
  if [[ $? == "100" ]]; then
    # Get latest version
    dnf update -y ${dnf_options} ${kernel}
  else
    # No update available; ensure it is the default boot kernel
    version=$(rpm -q "${kernel}")
    grubby --set-default="/boot/vmlinuz${version#${kernel}}"
  fi
else
  dnf install -y ${dnf_options} ${kernel}
fi

# use tmpfs for /tmp
TMP_IN_TMPFS=no
if [[ "${TMP_IN_TMPFS,,}" == "yes" ]]; then
  systemctl enable tmp.mount
fi
%end

%addon com_redhat_kdump --disable
%end
